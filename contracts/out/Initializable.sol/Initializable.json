{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-06/contracts/proxy/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-06/=lib/openzeppelin-contracts-06/contracts/\",\":openzeppelin-contracts-08/=lib/openzeppelin-contracts-08/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-06/contracts/proxy/Initializable.sol\":{\"keccak256\":\"0xe57eb71f19aee3afa4477c30487ef468b0ddd0d0c4b2eac69f6fe124807f2c6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eacb75de9a3e5c2e97f42894934ed1969bced1b8fdece486f058ea3d8e738df5\",\"dweb:/ipfs/QmPk2BW68A8a6dFbWgGWrxioYmZbJf8vhEdQEE8PpLHDbi\"]},\"lib/openzeppelin-contracts-06/contracts/utils/Address.sol\":{\"keccak256\":\"0x2600d2c948c7c81fd36b274a7fc0a3bfc3396d6d2c8d4297cd8a5e3379359e0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee6d6fae8e13acf29d4d7a3fc8438443daa9ab6a5149cab7e25e4a51cf110577\",\"dweb:/ipfs/QmQQMwZFCP1pkSXJcsnXGwWPQ9ppk2aTFgwZeAp4BxK5cK\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-06/=lib/openzeppelin-contracts-06/contracts/","openzeppelin-contracts-08/=lib/openzeppelin-contracts-08/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":1000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts-06/contracts/proxy/Initializable.sol":"Initializable"},"evmVersion":"istanbul","libraries":{}},"sources":{"lib/openzeppelin-contracts-06/contracts/proxy/Initializable.sol":{"keccak256":"0xe57eb71f19aee3afa4477c30487ef468b0ddd0d0c4b2eac69f6fe124807f2c6c","urls":["bzz-raw://eacb75de9a3e5c2e97f42894934ed1969bced1b8fdece486f058ea3d8e738df5","dweb:/ipfs/QmPk2BW68A8a6dFbWgGWrxioYmZbJf8vhEdQEE8PpLHDbi"],"license":"MIT"},"lib/openzeppelin-contracts-06/contracts/utils/Address.sol":{"keccak256":"0x2600d2c948c7c81fd36b274a7fc0a3bfc3396d6d2c8d4297cd8a5e3379359e0e","urls":["bzz-raw://ee6d6fae8e13acf29d4d7a3fc8438443daa9ab6a5149cab7e25e4a51cf110577","dweb:/ipfs/QmQQMwZFCP1pkSXJcsnXGwWPQ9ppk2aTFgwZeAp4BxK5cK"],"license":"MIT"}},"version":1},"id":2}